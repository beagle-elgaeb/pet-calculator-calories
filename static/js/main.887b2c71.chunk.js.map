{"version":3,"sources":["redux/mealSlise.ts","styles/colors.tsx","styles/patterns.tsx","components/Footer.tsx","components/Header.tsx","utils/validation.tsx","components/Form.tsx","utils/math.tsx","components/Meals.tsx","components/Days.tsx","components/Main.tsx","components/App.tsx","redux/store.ts","reportWebVitals.js","index.tsx"],"names":["names","getMonth","date","mealSlise","createSlice","name","initialState","reducers","loadState","_","payload","addMeal","state","Date","now","unshift","id","protein","Math","round","weight","fat","carb","calories","getDate","toString","padStart","actions","yellow","darkYellow","brightPurple","white","lightPurple","mediumPurple","purple","Container","css","Label","fullness","isValid","Input","table","Footer","FooterContainer","styled","footer","Header","HeaderContainer","Logo","LogoInside","Center","Title","Menu","header","h1","div","schema","Yup","nullable","max","positive","required","validationSchema","Form","dispatch","useDispatch","useState","setCalories","formik","useFormik","initialValues","onSubmit","values","resetForm","getError","touched","errors","undefined","onKeyPress","evt","key","Number","currentTarget","value","test","preventDefault","useEffect","result","Object","includes","ccalIn100Gr","calcСalories","FormContainer","handleSubmit","Grid","InputContainer","InputBJU","placeholder","type","min","step","onChange","handleChange","onBlur","handleBlur","LabelBJU","Error","InputG","getFieldProps","LabelG","SaveButton","disabled","form","h2","p","input","button","Meals","mealsByDay","mealsInDay","useSelector","meals","filter","meal","summCalories","summProtein","summFat","summCarb","summWeight","forEach","MealsContainer","map","i","Meal","Parametr","Totals","Total","Days","dates","Array","from","Set","DaysContainer","Day","DayTitle","MealTitles","SubTitle","Main","MainContainer","main","App","localStorageKey","savedState","localStorage","getItem","JSON","parse","setItem","stringify","AppContainer","store","configureStore","reducer","mealReducer","middleware","getDefaultMiddleware","concat","logger","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"0LAGMA,EAAQ,CACZ,uCACA,6CACA,iCACA,uCACA,qBACA,2BACA,2BACA,6CACA,mDACA,6CACA,uCACA,8CAGF,SAASC,EAASC,GAChB,OAAOF,EAAME,EAAKD,YAGb,I,UAAME,EAAYC,YAAY,CACnCC,KAAM,WACNC,aAAc,GACdC,SAAU,CACRC,UAAW,SAACC,EAAD,GACT,OADwD,EAAzCC,SAGjBC,QAAS,SACPC,EADO,GAGH,IADFF,EACC,EADDA,QAEIR,EAAO,IAAIW,KAAKA,KAAKC,OAE3BF,EAAMG,QAAQ,CACZC,GAAIH,KAAKC,MACTG,QAASC,KAAKC,MAAMT,EAAQO,QAAWP,EAAQU,QAAW,IAC1DC,IAAKH,KAAKC,MAAMT,EAAQW,IAAOX,EAAQU,QAAW,IAClDE,KAAMJ,KAAKC,MAAMT,EAAQY,KAAQZ,EAAQU,QAAW,IACpDA,OAAQV,EAAQU,OAChBG,SAAUb,EAAQa,SAClBrB,KAAK,GAAD,OAAKA,EAAKsB,UAAUC,WAAWC,SAAS,EAAG,KAA3C,YAAmDzB,EAASC,U,EAMlCC,EAAUwB,QAAjCnB,E,EAAAA,UAAWG,E,EAAAA,QAEXR,IAAf,QClDayB,EAAS,UACTC,EAAa,UACbC,EAAe,UACfC,EAAQ,UACRC,EAAc,UACdC,EAAe,UACfC,EAAS,U,QCHTC,EAAYC,YAAH,2FAMTC,EAAQ,SAAC,GAAD,IACnBC,EADmB,EACnBA,SACAC,EAFmB,EAEnBA,QAFmB,OAMfH,YANgB,IAAD,yIAQZE,EAAW,OAAS,MACzBA,EAAQ,sBAAkBN,EAAlB,KAAmC,GAC3CM,EAAYC,EAAU,GAAH,gCAAiCX,EAAjC,KAA8C,GACtDU,EAAW,OAAS,OAClBA,EAAW,OAAS,OAEjCA,EAAW,mBAAqB,KAGvBE,EAAQ,SAAC,GAAD,IAAGD,EAAH,EAAGA,QAAH,OAAuCH,YAAtC,IAAD,ijBAOLJ,EACJO,EAAU,OAAH,oBAAyBX,GAKjCM,EAOED,EAIWA,IAUXQ,EAAQL,YAAH,0G,OCrDHM,I,YAAAA,EAJf,WACE,OAAO,cAACC,EAAD,KAKHA,EAAkBC,IAAOC,OAAV,mCACjBV,GCiBWW,MAhBf,WACE,OACE,eAACC,EAAD,WACE,cAACC,EAAD,UACE,cAACC,EAAD,MAEF,eAACC,EAAD,WACE,cAACC,EAAD,yGACA,cAACA,EAAD,iFACA,cAACA,EAAD,6DAEF,cAACC,EAAD,QAOAL,EAAkBH,IAAOS,OAAV,qJACjBlB,EAIyBP,GAGvBuB,EAAQP,IAAOU,GAAV,sJAIA1B,EACgBM,GAIrBgB,EAASN,IAAOW,IAAV,0BAENP,EAAOJ,IAAOW,IAAV,oPAGM3B,EACMM,GAOhBe,EAAaL,IAAOW,IAAV,mNAIwBzB,EAAoBF,EACtCE,GAKhBsB,EAAOR,IAAOW,IAAV,6PAKJ1B,EACAA,EACAE,EACAA,EACAG,EACAA,EACAH,EACAA,EACAF,EACAA,G,kECjFA2B,GAASC,OACZC,WACAC,IAAI,IAAK,KACTC,SAAS,KACTC,SAAS,KAECC,GAAmBL,KAAW,CACzCxC,QAASuC,GACTnC,IAAKmC,GACLlC,KAAMkC,GACNpC,OAAQqC,OAAaE,IAAI,IAAM,KAAKC,SAAS,KAAKC,SAAS,OC+H9CE,OAjIf,WACE,IAAMC,EAAWC,cADH,EAGkBC,mBAAS,GAH3B,mBAGP3C,EAHO,KAGG4C,EAHH,KAKRC,EAASC,YAAU,CACvBC,cAAe,CACbrD,QAAS,KACTI,IAAK,KACLC,KAAM,KACNF,OAAQ,KAOV0C,iBAAkBA,GAClBS,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBT,EAASrD,EAAQ,2BAAK6D,GAAN,IAAcjD,eAC9BkD,OApBU,EAwByBL,EAAOI,OAAtCvD,EAxBM,EAwBNA,QAASI,EAxBH,EAwBGA,IAAKC,EAxBR,EAwBQA,KAAMF,EAxBd,EAwBcA,OAEtBsD,EAAW,SAACrE,GAAD,OACf+D,EAAOO,QAAQtE,GAAQ+D,EAAOQ,OAAOvE,QAAQwE,GAM/C,SAASC,EAAWC,IAEJ,MAAZA,EAAIC,KACJC,OAAOF,EAAIG,cAAcC,OAAS,OACL,MAA5BJ,EAAIG,cAAcC,OAAiB,OAAOC,KAAKL,EAAIC,OAEpDD,EAAIM,iBAIR,OAdAC,qBAAU,WACRnB,ECxCG,SAAsBK,GAM3B,IAAIe,EAAS,EAIb,GAFeC,OAAOhB,OAAOA,GAAQiB,SAAS,MAG5C,OAAOF,EAGT,IAAMnE,EAASoD,EAAOpD,OAAU,IAC1BsE,EAAgC,EAAlBlB,EAAOvD,QAA6B,EAAduD,EAAOnD,IAA0B,EAAfmD,EAAOlD,KAInE,OAFSJ,KAAKC,MAAMuE,EAActE,GDuBpBuE,CAAavB,EAAOI,WAC/B,CAACJ,EAAOI,SAaT,eAACoB,GAAD,CAAerB,SAAUH,EAAOyB,aAAhC,UACE,cAAC,GAAD,kFACA,eAACC,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,CACEC,YAAY,2BACZ5F,KAAK,UACL6F,KAAK,SACLC,IAAI,IACJxC,IAAI,MACJyC,KAAK,OACLtB,WAAYA,EACZvC,SAAUmC,EAAS,WACnBS,MAAK,OAAElE,QAAF,IAAEA,IAAW,GAClBoF,SAAUjC,EAAOkC,aACjBC,OAAQnC,EAAOoC,aAEjB,cAACC,GAAD,CAAUnE,WAAYrB,EAASsB,SAAUmC,EAAS,WAAlD,SACKzD,EAAU,iCAAU,WAEzB,cAACyF,GAAD,CAAOnE,SAAUmC,EAAS,WAA1B,SAAuCA,EAAS,gBAElD,eAACqB,GAAD,WACE,cAACC,GAAD,CACEC,YAAY,qBACZ5F,KAAK,MACL6F,KAAK,SACLC,IAAI,IACJxC,IAAI,MACJyC,KAAK,OACLtB,WAAYA,EACZvC,SAAUmC,EAAS,OACnBS,MAAK,OAAE9D,QAAF,IAAEA,IAAO,GACdgF,SAAUjC,EAAOkC,aACjBC,OAAQnC,EAAOoC,aAEjB,cAACC,GAAD,CAAUnE,WAAYjB,EAAKkB,SAAUmC,EAAS,OAA9C,SACKrD,EAAM,2BAAS,WAEpB,cAACqF,GAAD,CAAOnE,SAAUmC,EAAS,OAA1B,SAAmCA,EAAS,YAE9C,eAACqB,GAAD,WACE,cAACC,GAAD,CACEC,YAAY,6CACZ5F,KAAK,OACL6F,KAAK,SACLC,IAAI,IACJxC,IAAI,MACJyC,KAAK,OACLtB,WAAYA,EACZvC,SAAUmC,EAAS,QACnBS,MAAK,OAAE7D,QAAF,IAAEA,IAAQ,GACf+E,SAAUjC,EAAOkC,aACjBC,OAAQnC,EAAOoC,aAEjB,cAACC,GAAD,CAAUnE,WAAYhB,EAAMiB,SAAUmC,EAAS,QAA/C,SACKpD,EAAO,mDAAa,WAEzB,cAACoF,GAAD,CAAOnE,SAAUmC,EAAS,QAA1B,SAAoCA,EAAS,gBAGjD,cAAC,GAAD,mFACA,eAACqB,GAAD,WACE,cAACY,GAAD,aACEV,YAAY,2BACZC,KAAK,SACLC,IAAI,IACJxC,IAAI,OACJyC,KAAK,OACLtB,WAAYA,EACZvC,SAAUmC,EAAS,WACfN,EAAOwC,cAAc,YAE3B,cAACC,GAAD,CAAQvE,WAAYlB,EAAQmB,SAAUmC,EAAS,UAA/C,SACKtD,EAAS,uCAAW,WAEzB,cAACsF,GAAD,CAAOnE,SAAUmC,EAAS,UAA1B,SAAsCA,EAAS,eAEjD,cAACoC,GAAD,CAAYZ,KAAK,SAASa,UAAW3C,EAAO7B,QAA5C,qEAC6B,IAAbhB,EAAiB,6CAAYA,EAD7C,6EASAqE,GAAgBhD,IAAOoE,KAAV,8CAIb7D,GAAQP,IAAOqE,GAAV,wIAQLnB,GAAOlD,IAAOW,IAAV,wGAMJwC,GAAiBnD,IAAOW,IAAV,2GAOdkD,GAAW7D,IAAOsE,EAAV,8CACV7E,GAEA,qBAAGC,SAA2B,aAAe,iBAG3C0D,GAAWpD,IAAOuE,MAAV,6DACV3E,GAKEkE,GAAQ9D,IAAOW,IAAV,6MAIKvB,GACG,qBAAGO,QAAyB,OAAH,oBAAyBX,KAG1DA,GAILiF,GAASjE,IAAOsE,EAAV,8CACR7E,GAEA,qBAAGC,SAA2B,cAAgB,iBAG5CqE,GAAS/D,IAAOuE,MAAV,8DACR3E,GAKEsE,GAAalE,IAAOwE,OAAV,4VAKApF,EACMC,GAKX,gBAAG8E,EAAH,EAAGA,SAAH,MAA2B,UAARA,EAAc9E,EAAoBC,KAKlCD,G,iBErKfoF,OA/Cf,YAA4C,IAA3BnH,EAA0B,EAA1BA,KAGXoH,EAAa,GAEXC,EAJQC,aAAY,SAAC5G,GAAD,OAAkBA,EAAM6G,SAIzBC,QAAO,SAACC,GAAD,OAAUA,EAAKzH,OAASA,KAEpD0H,EAAe,EACfC,EAAc,EACdC,EAAU,EACVC,EAAW,EACXC,EAAa,EAYjB,OAVAT,EAAWU,SAAQ,SAACN,GAClBC,GAA8BD,EAAKpG,SACnCsG,GAA4BF,EAAK1G,QAAW0G,EAAKvG,OACjD0G,GAAoBH,EAAKtG,IAAOsG,EAAKvG,OACrC2G,GAAsBJ,EAAKrG,KAAQqG,EAAKvG,OACxC4G,GAA0BL,EAAKvG,UAGjCkG,EAAU,2BAAQA,GAAR,mBAAqBpH,EAAOqH,IAGpC,qCACE,cAACW,GAAD,UACGZ,EAAWpH,GAAMiI,KAAI,SAACR,EAAMS,GAAP,OACpB,eAACC,GAAD,WACE,cAACC,GAAD,UAAWX,EAAKpG,WAChB,cAAC+G,GAAD,UAAWX,EAAK1G,UAChB,cAACqH,GAAD,UAAWX,EAAKtG,MAChB,cAACiH,GAAD,UAAWX,EAAKrG,OAChB,cAACgH,GAAD,UAAWX,EAAKvG,WALPgH,QASf,eAACG,GAAD,WACE,cAACC,GAAD,UAAQZ,IACR,cAACY,GAAD,UAAQtH,KAAKC,MAAM0G,KACnB,cAACW,GAAD,UAAQtH,KAAKC,MAAM2G,KACnB,cAACU,GAAD,UAAQtH,KAAKC,MAAM4G,KACnB,cAACS,GAAD,UAAQR,WAQVE,GAAc,2EAIdG,GAAI,wCACN5F,EADM,6EAUJ6F,GAAQ,6EAEcrG,EAFd,6CAURsG,GAAM,wCACR9F,EADQ,uCAMN+F,GAAK,6EAEiBvG,EAFjB,0DAMAJ,EANA,6CCvDI4G,I,GAAAA,GAvBf,WACE,IAAMhB,EAAQD,aAAY,SAAC5G,GAAD,OAAkBA,EAAM6G,SAC5CiB,EAAQC,MAAMC,KAAK,IAAIC,IAAIpB,EAAMU,KAAI,SAACR,GAAD,OAAUA,EAAKzH,UAE1D,OACE,cAAC4I,GAAD,UACGJ,EAAMP,KAAI,SAACjI,EAAMkI,GAAP,OACT,eAACW,GAAD,WACE,cAACC,GAAD,UAAW9I,IACX,eAAC+I,GAAD,WACE,cAACC,GAAD,qBACA,cAACA,GAAD,qBACA,cAACA,GAAD,qBACA,cAACA,GAAD,qBACA,cAACA,GAAD,oCAEF,cAAC,GAAD,CAAOhJ,KAAMA,MATLkI,SAkBZU,GAAa,iFAIbC,GAAG,+EAEa9G,EAFb,uDAQH+G,GAAQ,4FAIEjH,EAJF,0DAQHH,EARG,0BASaM,EATb,6BAcR+G,GAAU,yCACZxG,EADY,uCAMVyG,GAAQ,8EAEcjH,EAFd,6DCjDCkH,I,GAAAA,GATf,WACE,OACE,eAACC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,QAOAA,GAAgBxG,IAAOyG,KAAV,mEACflH,EACsBF,GCyBXqH,OAjCf,WACE,IAAM1I,EAAQ4G,aAAY,SAAC5G,GAAD,OAAkBA,KACtCoD,EAAWC,cAEXsF,EAAkB,YAoBxB,OAjBAjE,qBAAU,WACR,IAAMkE,EAAaC,aAAaC,QAAQH,GAExC,GAAIC,EACF,IACExF,EAASxD,EAAUmJ,KAAKC,MAAMJ,GAAY/B,QAC1C,aAIH,IAGHnC,qBAAU,WACRmE,aAAaI,QAAQN,EAAiBI,KAAKG,UAAUlJ,MACpD,CAACA,IAGF,eAACmJ,GAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,QAOAA,GAAenH,IAAOW,IAAV,mKACdpB,EAKOD,G,oBCzCI8H,GAPDC,YAAe,CAC3BC,QAAS,CACPzC,MAAO0C,GAETC,WAAY,SAACC,GAAD,OAA0BA,IAAuBC,OAAOC,SCIvDC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,CAAeC,SAAUC,0BAAzB,SACE,cAAC,IAAD,CAAUpB,MAAOA,GAAjB,SACE,cAAC,GAAD,UAINqB,SAASC,eAAe,SAG1Bd,O","file":"static/js/main.887b2c71.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { MealItem } from \"./types\";\r\n\r\nconst names = [\r\n  \"января\",\r\n  \"февраля\",\r\n  \"марта\",\r\n  \"апреля\",\r\n  \"мая\",\r\n  \"июня\",\r\n  \"июля\",\r\n  \"августа\",\r\n  \"сентября\",\r\n  \"октября\",\r\n  \"ноября\",\r\n  \"декабря\",\r\n];\r\n\r\nfunction getMonth(date: Date) {\r\n  return names[date.getMonth()];\r\n}\r\n\r\nexport const mealSlise = createSlice({\r\n  name: \"todoItem\",\r\n  initialState: [] as MealItem[],\r\n  reducers: {\r\n    loadState: (_, { payload }: PayloadAction<MealItem[]>) => {\r\n      return payload;\r\n    },\r\n    addMeal: (\r\n      state,\r\n      { payload }: PayloadAction<Omit<MealItem, \"id\" | \"date\">>\r\n    ) => {\r\n      const date = new Date(Date.now());\r\n\r\n      state.unshift({\r\n        id: Date.now(),\r\n        protein: Math.round(payload.protein! * payload.weight!) / 100,\r\n        fat: Math.round(payload.fat! * payload.weight!) / 100,\r\n        carb: Math.round(payload.carb! * payload.weight!) / 100,\r\n        weight: payload.weight,\r\n        calories: payload.calories,\r\n        date: `${date.getDate().toString().padStart(2, \"0\")} ${getMonth(date)}`,\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loadState, addMeal } = mealSlise.actions;\r\n\r\nexport default mealSlise.reducer;\r\n","export const yellow = \"#f3c700\"; //       рамка ошибочного инпута, ошибка, рамка ошибки, заголовок хедера\r\nexport const darkYellow = \"#9E8100\";\r\nexport const brightPurple = \"#9D4DD0\";\r\nexport const white = \"#ffffff\";\r\nexport const lightPurple = \"#fcfbff\"; //  фон инпута, фон ошибки, фон кнопки добавления\r\nexport const mediumPurple = \"#d9cfff\"; // плейсхолдеры, текст неактивной кнопки,\r\nexport const purple = \"#3f23a6\"; //       лейбл инпута, вводимый текст в инпуте, тень заголовка хедера,\r\n//                                          текст активной кнопки\r\n","import { css } from \"@emotion/react\";\r\nimport { lightPurple, mediumPurple, purple, yellow } from \"./colors\";\r\n\r\nexport const Container = css`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 20px 0;\r\n`;\r\n\r\nexport const Label = ({\r\n  fullness,\r\n  isValid,\r\n}: {\r\n  fullness: boolean;\r\n  isValid: boolean;\r\n}) => css`\r\n  position: absolute;\r\n  top: ${fullness ? \"-6px\" : \"6px\"};\r\n  ${fullness ? `background: ${lightPurple};` : \"\"};\r\n  ${fullness ? (isValid ? \"\" : `border-top: 1px solid ${yellow};`) : \"\"};\r\n  font-size: ${fullness ? \"10px\" : \"20px\"};\r\n  line-height: ${fullness ? \"12px\" : \"22px\"};\r\n  margin: 0;\r\n  ${fullness ? \"padding: 0 10px;\" : \"\"};\r\n`;\r\n\r\nexport const Input = ({ isValid }: { isValid: boolean }) => css`\r\n  height: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: ${lightPurple};\r\n  border: ${isValid ? \"none\" : `1px solid ${yellow}`};\r\n  border-radius: 5px;\r\n  outline: none;\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  color: ${purple};\r\n  padding: 0 10px;\r\n\r\n  ::placeholder {\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    font-weight: 300;\r\n    color: ${mediumPurple};\r\n  }\r\n\r\n  :focus {\r\n    border: 1px solid ${mediumPurple};\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const table = css`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  row-gap: 10px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { Container } from \"../styles/patterns\";\r\n\r\nfunction Footer() {\r\n  return <FooterContainer></FooterContainer>;\r\n}\r\n\r\nexport default Footer;\r\n\r\nconst FooterContainer = styled.footer`\r\n  ${Container};\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport {\r\n  brightPurple,\r\n  darkYellow,\r\n  purple,\r\n  white,\r\n  yellow,\r\n} from \"../styles/colors\";\r\nimport { Container } from \"../styles/patterns\";\r\nimport logo from \"../icons/logo.png\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderContainer>\r\n      <Logo>\r\n        <LogoInside></LogoInside>\r\n      </Logo>\r\n      <Center>\r\n        <Title>Минималистичный</Title>\r\n        <Title>калькулятор</Title>\r\n        <Title> калорий</Title>\r\n      </Center>\r\n      <Menu></Menu>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst HeaderContainer = styled.header`\r\n  ${Container};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  border-bottom: 1px solid ${yellow};\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 20px;\r\n  line-height: 22px;\r\n  font-weight: 400;\r\n  color: ${yellow};\r\n  text-shadow: 0 1px 1px ${purple};\r\n  margin: 0;\r\n`;\r\n\r\nconst Center = styled.div``;\r\n\r\nconst Logo = styled.div`\r\n  height: 19px;\r\n  width: 22px;\r\n  background: ${yellow};\r\n  border: 2px solid ${purple};\r\n  border-top-left-radius: 6px;\r\n  border-top-right-radius: 10px;\r\n  border-bottom-left-radius: 10px;\r\n  border-bottom-right-radius: 6px;\r\n`;\r\n\r\nconst LogoInside = styled.div`\r\n  height: 19px;\r\n  width: 19px;\r\n  box-sizing: border-box;\r\n  background: radial-gradient(circle, ${brightPurple} 0%, ${yellow} 50%);\r\n  border: 2px solid ${brightPurple};\r\n  border-radius: 99em;\r\n  margin: auto;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  height: 19px;\r\n  width: 22px;\r\n  background: linear-gradient(\r\n    180deg,\r\n    ${darkYellow} 0,\r\n    ${darkYellow} 3px,\r\n    ${white} 3px,\r\n    ${white} 8px,\r\n    ${purple} 8px,\r\n    ${purple} 11px,\r\n    ${white} 11px,\r\n    ${white} 16px,\r\n    ${darkYellow} 16px,\r\n    ${darkYellow} 19px\r\n  );\r\n`;\r\n","import * as Yup from \"yup\";\r\n\r\nconst schema = Yup.number()\r\n  .nullable()\r\n  .max(100, \"?\")\r\n  .positive(\"?\")\r\n  .required(\"?\");\r\n\r\nexport const validationSchema = Yup.object({\r\n  protein: schema,\r\n  fat: schema,\r\n  carb: schema,\r\n  weight: Yup.number().max(1000, \"?\").positive(\"?\").required(\"?\"),\r\n});\r\n","import styled from \"@emotion/styled\";\r\nimport { useFormik } from \"formik\";\r\nimport { useEffect, useState, KeyboardEvent } from \"react\";\r\nimport { lightPurple, mediumPurple, purple, yellow } from \"../styles/colors\";\r\nimport { calcСalories } from \"../utils/math\";\r\nimport { Input, Label } from \"../styles/patterns\";\r\nimport { validationSchema } from \"../utils/validation\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addMeal } from \"../redux/mealSlise\";\r\n\r\nfunction Form() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [calories, setCalories] = useState(0);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      protein: null,\r\n      fat: null,\r\n      carb: null,\r\n      weight: 100,\r\n    } as {\r\n      protein: number | null;\r\n      fat: number | null;\r\n      carb: number | null;\r\n      weight: number | null;\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      dispatch(addMeal({ ...values, calories }));\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  const { protein, fat, carb, weight } = formik.values;\r\n\r\n  const getError = (name: keyof typeof formik.values) =>\r\n    formik.touched[name] ? formik.errors[name] : undefined;\r\n\r\n  useEffect(() => {\r\n    setCalories(calcСalories(formik.values));\r\n  }, [formik.values]);\r\n\r\n  function onKeyPress(evt: KeyboardEvent<HTMLInputElement>) {\r\n    if (\r\n      evt.key === \"-\" ||\r\n      Number(evt.currentTarget.value) > 99.99 ||\r\n      (evt.currentTarget.value === \"0\" && /^[0]/.test(evt.key))\r\n    ) {\r\n      evt.preventDefault();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer onSubmit={formik.handleSubmit}>\r\n      <Title>БЖУ на 100 грамм:</Title>\r\n      <Grid>\r\n        <InputContainer>\r\n          <InputBJU\r\n            placeholder=\"елки\"\r\n            name=\"protein\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"0.01\"\r\n            onKeyPress={onKeyPress}\r\n            isValid={!getError(\"protein\")}\r\n            value={protein ?? \"\"}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          <LabelBJU fullness={!!protein} isValid={!getError(\"protein\")}>\r\n            {!!protein ? \"Белки\" : \"Б\"}\r\n          </LabelBJU>\r\n          <Error isValid={!getError(\"protein\")}>{getError(\"protein\")}</Error>\r\n        </InputContainer>\r\n        <InputContainer>\r\n          <InputBJU\r\n            placeholder=\"иры\"\r\n            name=\"fat\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"0.01\"\r\n            onKeyPress={onKeyPress}\r\n            isValid={!getError(\"fat\")}\r\n            value={fat ?? \"\"}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          <LabelBJU fullness={!!fat} isValid={!getError(\"fat\")}>\r\n            {!!fat ? \"Жиры\" : \"Ж\"}\r\n          </LabelBJU>\r\n          <Error isValid={!getError(\"fat\")}>{getError(\"fat\")}</Error>\r\n        </InputContainer>\r\n        <InputContainer>\r\n          <InputBJU\r\n            placeholder=\"глеводы\"\r\n            name=\"carb\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"0.01\"\r\n            onKeyPress={onKeyPress}\r\n            isValid={!getError(\"carb\")}\r\n            value={carb ?? \"\"}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          <LabelBJU fullness={!!carb} isValid={!getError(\"carb\")}>\r\n            {!!carb ? \"Углеводы\" : \"У\"}\r\n          </LabelBJU>\r\n          <Error isValid={!getError(\"carb\")}>{getError(\"carb\")}</Error>\r\n        </InputContainer>\r\n      </Grid>\r\n      <Title>Вес продукта:</Title>\r\n      <InputContainer>\r\n        <InputG\r\n          placeholder=\"рамм\"\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"1000\"\r\n          step=\"0.01\"\r\n          onKeyPress={onKeyPress}\r\n          isValid={!getError(\"weight\")}\r\n          {...formik.getFieldProps(\"weight\")}\r\n        />\r\n        <LabelG fullness={!!weight} isValid={!getError(\"weight\")}>\r\n          {!!weight ? \"Граммы\" : \"Г\"}\r\n        </LabelG>\r\n        <Error isValid={!getError(\"weight\")}>{getError(\"weight\")}</Error>\r\n      </InputContainer>\r\n      <SaveButton type=\"submit\" disabled={!formik.isValid}>\r\n        {` Добавить ${calories === 0 ? \"немного\" : calories} килокалорий`}\r\n      </SaveButton>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n\r\nconst FormContainer = styled.form`\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  font-weight: 300;\r\n  text-align: start;\r\n  margin: 0 0 15px;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 10px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  height: 36px;\r\n  width: 100%;\r\n  position: relative;\r\n  margin: 0 0 10px;\r\n`;\r\n\r\nconst LabelBJU = styled.p<{ fullness: boolean; isValid: boolean }>`\r\n  ${Label}\r\n\r\n  ${({ fullness }) => (fullness ? \"left: 5px;\" : \"right: 80%;\")};\r\n`;\r\n\r\nconst InputBJU = styled.input<{ isValid: boolean }>`\r\n  ${Input};\r\n\r\n  padding-left: 21%;\r\n`;\r\n\r\nconst Error = styled.div<{ isValid: boolean }>`\r\n  position: absolute;\r\n  bottom: -6px;\r\n  right: 10px;\r\n  background: ${lightPurple};\r\n  border-bottom: ${({ isValid }) => (isValid ? \"none\" : `1px solid ${yellow}`)};\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: ${yellow};\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst LabelG = styled.p<{ fullness: boolean; isValid: boolean }>`\r\n  ${Label}\r\n\r\n  ${({ fullness }) => (fullness ? \"left: 10px;\" : \"right: 94%;\")};\r\n`;\r\n\r\nconst InputG = styled.input<{ isValid: boolean }>`\r\n  ${Input};\r\n\r\n  padding-left: 6.2%;\r\n`;\r\n\r\nconst SaveButton = styled.button<{ disabled: boolean }>`\r\n  height: 36px;\r\n  width: 100%;\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  background: ${lightPurple};\r\n  border: 1px solid ${mediumPurple};\r\n  border-radius: 5px;\r\n  outline: none;\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  color: ${({ disabled }) => (disabled ? `${mediumPurple}` : `${purple}`)};\r\n  cursor: pointer;\r\n  margin: 10px 0;\r\n\r\n  :hover {\r\n    box-shadow: 0 0 5px 1px ${mediumPurple};\r\n  }\r\n`;\r\n","export function calcСalories(values: {\r\n  protein: number | null;\r\n  fat: number | null;\r\n  carb: number | null;\r\n  weight: number | null;\r\n}): number {\r\n  let result = 0;\r\n\r\n  const isNull = Object.values(values).includes(null);\r\n\r\n  if (isNull) {\r\n    return result;\r\n  }\r\n\r\n  const weight = values.weight! / 100;\r\n  const ccalIn100Gr = values.protein! * 4 + values.fat! * 9 + values.carb! * 4;\r\n\r\n  result = Math.round(ccalIn100Gr * weight);\r\n\r\n  return result;\r\n}\r\n","import styled from \"@emotion/styled/macro\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MealItem, State } from \"../redux/types\";\r\nimport { darkYellow, mediumPurple } from \"../styles/colors\";\r\nimport { table } from \"../styles/patterns\";\r\n\r\nfunction Meals({ date }: { date: string }) {\r\n  const meals = useSelector((state: State) => state.meals);\r\n\r\n  let mealsByDay = {} as Record<string, MealItem[]>;\r\n\r\n  const mealsInDay = meals.filter((meal) => meal.date === date);\r\n\r\n  let summCalories = 0;\r\n  let summProtein = 0;\r\n  let summFat = 0;\r\n  let summCarb = 0;\r\n  let summWeight = 0;\r\n\r\n  mealsInDay.forEach((meal) => {\r\n    summCalories = summCalories + meal.calories!;\r\n    summProtein = summProtein + meal.protein! * meal.weight!;\r\n    summFat = summFat + meal.fat! * meal.weight!;\r\n    summCarb = summCarb + meal.carb! * meal.weight!;\r\n    summWeight = summWeight + meal.weight!;\r\n  });\r\n\r\n  mealsByDay = { ...mealsByDay, [date]: mealsInDay };\r\n\r\n  return (\r\n    <>\r\n      <MealsContainer>\r\n        {mealsByDay[date].map((meal, i) => (\r\n          <Meal key={i}>\r\n            <Parametr>{meal.calories}</Parametr>\r\n            <Parametr>{meal.protein}</Parametr>\r\n            <Parametr>{meal.fat}</Parametr>\r\n            <Parametr>{meal.carb}</Parametr>\r\n            <Parametr>{meal.weight}</Parametr>\r\n          </Meal>\r\n        ))}\r\n      </MealsContainer>\r\n      <Totals>\r\n        <Total>{summCalories}</Total>\r\n        <Total>{Math.round(summProtein)}</Total>\r\n        <Total>{Math.round(summFat)}</Total>\r\n        <Total>{Math.round(summCarb)}</Total>\r\n        <Total>{summWeight}</Total>\r\n      </Totals>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Meals;\r\n\r\nconst MealsContainer = styled.div`\r\n  margin: 0;\r\n`;\r\n\r\nconst Meal = styled.div`\r\n  ${table}\r\n  justify-items: start;\r\n  padding: 0 10px 6px 10px;\r\n\r\n  :last-child {\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nconst Parametr = styled.div`\r\n  width: 100%;\r\n  border-right: 1px solid ${mediumPurple};\r\n  margin: 0;\r\n\r\n  :last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nconst Totals = styled.div`\r\n  ${table}\r\n  justify-items: center;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Total = styled.div`\r\n  width: 100%;\r\n  border-right: 1px solid ${mediumPurple};\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  font-weight: 500;\r\n  color: ${darkYellow};\r\n  margin: 0;\r\n\r\n  :last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled/macro\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { State } from \"../redux/types\";\r\nimport { mediumPurple, purple, white, yellow } from \"../styles/colors\";\r\nimport { table } from \"../styles/patterns\";\r\nimport Meals from \"./Meals\";\r\n\r\nfunction Days() {\r\n  const meals = useSelector((state: State) => state.meals);\r\n  const dates = Array.from(new Set(meals.map((meal) => meal.date)));\r\n\r\n  return (\r\n    <DaysContainer>\r\n      {dates.map((date, i) => (\r\n        <Day key={i}>\r\n          <DayTitle>{date}</DayTitle>\r\n          <MealTitles>\r\n            <SubTitle>к</SubTitle>\r\n            <SubTitle>б</SubTitle>\r\n            <SubTitle>ж</SubTitle>\r\n            <SubTitle>у</SubTitle>\r\n            <SubTitle>вес</SubTitle>\r\n          </MealTitles>\r\n          <Meals date={date} />\r\n        </Day>\r\n      ))}\r\n    </DaysContainer>\r\n  );\r\n}\r\n\r\nexport default Days;\r\n\r\nconst DaysContainer = styled.div`\r\n  margin: 40px 0;\r\n`;\r\n\r\nconst Day = styled.div`\r\n  position: relative;\r\n  border: 1px solid ${mediumPurple};\r\n  border-radius: 5px;\r\n  margin: 20px 0;\r\n  padding: 20px 10px;\r\n`;\r\n\r\nconst DayTitle = styled.h3`\r\n  position: absolute;\r\n  top: -12px;\r\n  left: 10px;\r\n  background: ${white};\r\n  font-size: 20px;\r\n  line-height: 22px;\r\n  font-weight: 400;\r\n  color: ${yellow};\r\n  text-shadow: 0 1px 1px ${purple};\r\n  margin: 0;\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst MealTitles = styled.div`\r\n  ${table}\r\n  justify-items: center;\r\n  padding: 10px;\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  width: 100%;\r\n  border-right: 1px solid ${mediumPurple};\r\n  font-weight: 600;\r\n  margin: 0;\r\n\r\n  :last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { Container } from \"../styles/patterns\";\r\nimport Form from \"./Form\";\r\nimport Days from \"./Days\";\r\nimport { mediumPurple } from \"../styles/colors\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <MainContainer>\r\n      <Form />\r\n      <Days />\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n\r\nconst MainContainer = styled.main`\r\n  ${Container};\r\n  border-top: 1px solid ${mediumPurple};\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadState } from \"../redux/mealSlise\";\r\nimport { State } from \"../redux/types\";\r\nimport { purple } from \"../styles/colors\";\r\nimport { Container } from \"../styles/patterns\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\n\r\nfunction App() {\r\n  const state = useSelector((state: State) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const localStorageKey = \"mealState\";\r\n\r\n  // Загрузка данных из локального хранилища в стейт\r\n  useEffect(() => {\r\n    const savedState = localStorage.getItem(localStorageKey);\r\n\r\n    if (savedState) {\r\n      try {\r\n        dispatch(loadState(JSON.parse(savedState).meals));\r\n      } catch {}\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Загрузка данных из стейта в локальное хранилище\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return (\r\n    <AppContainer>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppContainer = styled.div`\r\n  ${Container};\r\n\r\n  max-width: 500px;\r\n  min-width: 320px;\r\n  text-align: center;\r\n  color: ${purple};\r\n  margin: 0 auto;\r\n  padding: 0 10px 20px;\r\n`;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport mealReducer from \"./mealSlise\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    meals: mealReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;","import \"@fontsource/inter/cyrillic.css\";\r\nimport \"normalize.css\";\r\nimport { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\nimport store from \"./redux/store\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}